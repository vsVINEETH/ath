<style>
  .hidden-form {
    height: 0;
    overflow: hidden;
    /* transition: height 3s ease; */
  }

  /* Show the form when it's not hidden */
  .show-form {
    height: auto;
  }

  .card a {
    text-decoration: none;
    color: black;
    outline: none;
  }

  .card {
    transform: scale(1);
    transition: transform 0.2s ease, background-color 0.2s ease;
    /* Add transition for smooth animation */
  }

  .card:hover {
    transform: scale(1.05);
    opacity: 0.9;
    /* Apply scale and flip on hover */
  }

  #whish {
    transition: transform 0.3s ease;

    /* Add transition for transform */
  }

  /* Apply zoom-out effect */
  .zoom-out {
    transform: scale(1.1);
  }

  .page-item.active .page-link {
  
  background-color: rgb(198, 195, 195); /* Change the active background color to grey */
  border-color: rgb(176, 176, 176); /* Change the border color */
}
</style>
<%- include('nav-bar') %>

<div id="carouselExample" class="carousel slide" data-bs-ride="carousel" >
  <div class="carousel-inner">
    <div class="carousel-item active">
      <img src="img/nike-just-do-it.jpeg" class="d-block w-100" alt="..." />
    </div>
    <div class="carousel-item">
      <img src="img/nike-just-do-it.jpeg" class="d-block w-100" alt="..." />
    </div>
  </div>
  <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

<div class="container-fluid mt-5 mb-5" id="card-section">
  <div class="row ms-3">
    <div class="row d-block align-items-center text-start">
      <button id="filterBtn" class="btn btn-dark col-auto mb-2 mt-2 shadow">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-funnel" viewBox="0 0 16 16">
          <path d="M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5zm1 .5v1.308l4.372 4.858A.5.5 0 0 1 7 8.5v5.306l2-.666V8.5a.5.5 0 0 1 .128-.334L13.5 3.308V2z" />
        </svg>
        Filter & Sort
      </button>

      <form name="form1" id="form1" action="/filter" method="get"  class="hidden-form row align-items-center justify-content-between bg-dark rounded">
        <div class="col-auto justify-content-between">
          <label for="" class="text-white">Sort By:</label>
          <select name="sort" id="stock" class="rounded border-1">
            <option selected disabled>Select an option</option>
            <option value="2">Price: Low to High</option>
            <option value="3">Price: high to low</option>
            <option value="4">aA - zZ</option>
            <option value="5">zZ - aA</option>
          </select>
        </div>
        <div class="col-auto justify-content-between">
          <label for="" class="text-white">Availabity:</label>
          <select name="stock" id="stock" class="rounded border-1">
            <option selected disabled>Select an option</option>
            <option value="1">In Stock</option>
            <option value="2">Out of Stock</option>
          </select>
        </div>
        <div class="col-auto">
          <label for="" class="text-white">Category:</label>
          <select name="category" id="category" class="rounded border-1">
            <option selected disabled>Select category</option>
            <% categoryData.forEach((element,index)=> { %>
            <option value="<%= element.category_name %>">
              <%= element.category_name %>
            </option>
            <% }) %>
          </select>
        </div>
        <div class="col-auto">
          <label for="" class="text-white">Colour: </label>
          <select name="colour" id="colour" class="rounded border-1">
            <option selected disabled>Select colour</option>
            <option value="Red">Red</option>
            <option value="Blue">Blue</option>
            <option value="Green">Green</option>
            <option value="Yellow">Yellow</option>
            <option value="Orange">Orange</option>
            <option value="Purple">Purple</option>
            <option value="Pink">Pink</option>
            <option value="Brown">Brown</option>
            <option value="Black">Black</option>
            <option value="White">white</option>
            <option value="Gray">Gray</option>
            <option value="Cyan">Cyan</option>
          </select>
        </div>
        <div class="col-auto text-center">
          <label for="price-range" class="form-label text-white">Price Range</label>
          <input type="range" name="price-range" id="price-range" min="0" max="10000" value="0" class="form-range" />
          <div class="d-flex justify-content-between mt-2">
            <span id="min-price" class="text-white">&#8377;0</span>
            <span id="max-price" class="text-white">&#8377;10000</span>
          </div>
        </div>
        <div class="col-auto">
          <button type="submit" class="btn btn-outline-light btn-sm">
            Submit
          </button>
          <a href="/home"><button class="btn btn-outline-light btn-sm" type="button">
              Reset filter
            </button></a>
        </div>
      </form>
    </div>
  </div>

  <div class="row justify-content-evenly">
    <% let productStore=productData %>
    <% let dataindex=0 %>
    <% productData.forEach((element,index)=> { %>

    <% let isWish=false; %>
    <% wishListData.forEach(wishListItem=> { %>
    <% wishListItem.items.forEach(item=> { %>
    <% if(item.product._id.toString() === element._id.toString()) { %>
    <% isWish=true; %>
    <% } %>
    <% }); %>
    <% }); %>
    <% if(element.is_listed == true ) { %>
    <div class="card mx-2 my-2 mb-5 shadow" style="width: 18rem" data-productId="<%= element._id %>">

      <a href="/product_detail/<%= element._id %>">
        <img src="/uploads/<%= element.image[0] %>" class="card-img-top mt-2" alt="..." />
      </a>
      <div class="card-body text-start">
        <div class="d-flex justify-content-between align-items-center ">
          <h5 class="card-title"><%= element.product_name %></h5>
          <h6 class=""><%= element.model %> </h6>
        </div>
        <div class="d-flex justify-content-between align-items-center mb-2">
          <p class="card-text mb-0">
            <%= element.category.category_name %>
          </p>
          <% if (element.offer_applied) { %>
          <p class="card-text text-end">&#8377; <%= element.price %> <br> <span class="small text-secondary" style="text-decoration: line-through;">&#8377; <%= element.mrp %> </span>
          </p>
          <% } else {%>
          <p class="card-text text-end">&#8377; <%= element.price %>
          </p>
          <% }%>
        </div>

        <div class="d-flex justify-content-between align-items-center">
          <a href="/product_detail/<%= element._id %>">
            <button class="btn btn-outline-dark btn-sm ">view
              <!-- &#128065; -->
            </button>
          </a>
          <svg id="whish" onclick="addToWishList('<%= element._id %>')" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="<%= isWish ? 'red' : 'currentColor' %>" style="color: rgb(212, 212, 212)" class="bi bi-heart-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314" />
          </svg>
        </div>
      </div>
    </div>
    <% } %>
    <% }) %>
  </div>
</div>

<div class="d-flex justify-content-center " id="paginationContainer">
  <nav aria-label="Page navigation example">
    <ul class="pagination" id="paginationList">
      <% if (page > 1) { %>
        <!-- Link to previous page -->
        <li class="page-item">
          <a class="page-link" href="?page=<%= page - 1 %>" aria-label="Previous">
            <span aria-hidden="true" class="text-dark">&laquo;</span>
          </a>
        </li>
      <% } %>

      <% for (let i = 1; i <= totalPage; i++) { %>
        <!-- Display page numbers -->
        <li class="page-item <%= page === i ? 'active' : '' %>">
          <a class="page-link text-dark" href="?page=<%= i %>"><%= i %></a>
        </li>
      <% } %>

      <% if (nextPage) { %>
        <!-- Link to next page -->
        <li class="page-item">
          <a class="page-link" href="?page=<%= nextPage %>" aria-label="Next">
            <span aria-hidden="true" class="text-dark">&raquo;</span>
          </a>
        </li>
      <% } %>
    </ul>
  </nav>
</div>

<script>
  setTimeout(() => {

    const cardSection = document.getElementById('card-section');
    cardSection.scrollIntoView({
      behavior: 'smooth',
      block: 'start'
    });
  }, 3000);


  document.addEventListener("DOMContentLoaded", function() {
  const form = document.getElementById("form1");

  form.addEventListener("submit", function(event) {
    // Collect form data
    const sort = document.getElementById("sort").value;
    const stock = document.getElementById("stock").value;
    const category = document.getElementById("category").value;
    const colour = document.getElementById("colour").value;
    const priceRange = document.getElementById("price-range").value;

    // Construct the query string
    const queryString = `sort=${sort}&stock=${stock}&category=${category}&colour=${colour}&price-range=${priceRange}`;

    // Construct the URL with the query string
    const url = `/filter?${queryString}`;

    // Update the form's action attribute
    form.action = url;
  });
});

document.addEventListener("DOMContentLoaded", function() {
  const formSearch = document.getElementById("search");

  formSearch.addEventListener("submit", function(event) {
    // Collect form data
    const search = document.getElementById("search").value;


    // Construct the query string
    const queryString = `search=${search}`;

    // Construct the URL with the query string
    const url = `/filter?${queryString}`;

    // Update the form's action attribute
    form.action = url;
  });
});


  function addToWishList(itemId) {
    var selectElement = document.querySelector(
      `select[onclick="addToWishList('${itemId}')"]`
    );
    fetch("/wish_list_action", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          itemId: itemId,
        }),
      })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }

        const heartIcon = document.querySelector(
          `svg[id="whish"][onclick="addToWishList('${itemId}')"]`
        );
        if (heartIcon.style.fill === "red") {
          heartIcon.style.fill = "currentColor"; // Change back to default color
        } else {
          heartIcon.style.fill = "red"; // Change to red color
        }

        heartIcon.classList.add("zoom-out");
        // Remove the class after a delay to reset the effect
        setTimeout(() => {
          heartIcon.classList.remove("zoom-out");
        }, 300); // Adjust the duration to match the transition duration
        console.log("Added to wish list successfully");
      })
      .catch((error) => {
        console.error("Error adding wish list status:", error);
      });
  }

  //drop down effect
  document.addEventListener("DOMContentLoaded", function() {
    const filterBtn = document.getElementById("filterBtn");
    const form = document.getElementById("form1");

    filterBtn.addEventListener("click", function() {
      form.classList.toggle("show-form");
    });
  });
  // range
  document
    .getElementById("price-range")
    .addEventListener("input", updatePriceDisplay);

  function updatePriceDisplay() {
    const minPrice = document.getElementById("min-price");
    const maxPrice = document.getElementById("max-price");
    const priceRange = document.getElementById("price-range");

    minPrice.textContent = `${priceRange.value}`;
    maxPrice.textContent = `${priceRange.max}`;
  }

  document.addEventListener("DOMContentLoaded", function() {
    var menLink = document.querySelector(
      '.navbar-nav .nav-link[href="/home#card-section"]'
    );
    if (menLink) {
      menLink.addEventListener("click", function(event) {
        event.preventDefault(); // Prevent default link behavior
        var cardSection = document.getElementById("card-section");
        if (cardSection) {
          cardSection.scrollIntoView({
            behavior: "smooth",
          });
        }
      });
    }
  });

</script>
<%- include('footer') %>